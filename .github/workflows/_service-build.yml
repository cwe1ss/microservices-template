name: 'Template: Service Build'

on:
  workflow_call:
    inputs:
      serviceName:
        required: true
        type: string
      hostProjectName:
        required: true
        type: string
      imageName:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Docker Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ secrets.REGISTRY_SERVER }}/oauth2/exchange -v -d "grant_type=access_token&service=${{ secrets.REGISTRY_SERVER }}&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ secrets.REGISTRY_SERVER }} <<< "$refresh_token"

    - uses: actions/setup-dotnet@v2

    - run: dotnet --version

    - name: 'Build service'
      uses: azure/powershell@v1
      with:
        inlineScript: |
          Set-Location ./infrastructure
          ./build-service.ps1 -ServiceName ${{ inputs.serviceName }} -HostProjectName ${{ inputs.hostProjectName }} -ContainerImageName ${{ inputs.imageName }} -BuildNumber ${{ github.run_number }}
        azPSVersion: "latest"

    - run: docker tag ${{ inputs.imageName }}:${{ github.run_number }} ${{ secrets.REGISTRY_SERVER }}/${{ inputs.imageName }}:${{ github.run_number }}

    - run: docker push ${{ secrets.REGISTRY_SERVER }}/${{ inputs.imageName }}:${{ github.run_number }}
