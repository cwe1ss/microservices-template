name: Service demo

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    
    - name: 'Azure CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.REGISTRY_SERVER }}/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.REGISTRY_SERVER }}&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.REGISTRY_SERVER }} <<< "$refresh_token"

    - name: Build the service and push it to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.REGISTRY_SERVER }}/lab-msa-svc-demo:${{ github.sha }}
        file: services/demo/Demo.Api/Dockerfile
        context: services/demo


  deploy-development:
    needs: build
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: 'Azure CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    - name: 'Deploy Azure resources'
      shell: pwsh
      working-directory: infrastructure
      run: ./deploy-service.ps1 -Environment development -Service demo


  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: 'Azure CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Deploy Azure resources'
      shell: pwsh
      working-directory: infrastructure
      run: ./deploy-service.ps1 -Environment production -Service demo
